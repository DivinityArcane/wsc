{
    "project": {},
    "files": {
        "src/dAmn/base.js": {
            "name": "src/dAmn/base.js",
            "modules": {
                "dAmn": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/dAmn/emotes.js": {
            "name": "src/dAmn/emotes.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/dAmn/extension.js": {
            "name": "src/dAmn/extension.js",
            "modules": {},
            "classes": {
                "dAmn.Extension": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/dAmn/icon.js": {
            "name": "src/dAmn/icon.js",
            "modules": {},
            "classes": {
                "dAmn.avatar": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/dAmn/linkbds.js": {
            "name": "src/dAmn/linkbds.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/dAmn/stash.js": {
            "name": "src/dAmn/stash.js",
            "modules": {},
            "classes": {
                "dAmn.Stash": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/dAmn/tablumps.js": {
            "name": "src/dAmn/tablumps.js",
            "modules": {},
            "classes": {
                "dAmn.TablumpString": 1,
                "dAmn.TablumpParser": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/autojoin.js": {
            "name": "src/autojoin.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/away.js": {
            "name": "src/away.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/base.js": {
            "name": "src/base.js",
            "modules": {
                "wsc": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/channel.js": {
            "name": "src/channel.js",
            "modules": {},
            "classes": {
                "wsc.Channel": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/client.js": {
            "name": "src/client.js",
            "modules": {},
            "classes": {
                "wsc.Client": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/commands.js": {
            "name": "src/commands.js",
            "modules": {},
            "classes": {
                "wsc.defaults.Extension": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/control.js": {
            "name": "src/control.js",
            "modules": {},
            "classes": {
                "wsc.Control": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/events.js": {
            "name": "src/events.js",
            "modules": {},
            "classes": {
                "EventEmitter": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/flow.js": {
            "name": "src/flow.js",
            "modules": {},
            "classes": {
                "wsc.Flow": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/ignore.js": {
            "name": "src/ignore.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/lib.js": {
            "name": "src/lib.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/messages.js": {
            "name": "src/messages.js",
            "modules": {},
            "classes": {
                "wsc.MessageString": 1,
                "wsc.MessageParser": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/middleware.js": {
            "name": "src/middleware.js",
            "modules": {},
            "classes": {
                "wsc.Middleware": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/packet.js": {
            "name": "src/packet.js",
            "modules": {},
            "classes": {
                "wsc.Packet": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/protocol.js": {
            "name": "src/protocol.js",
            "modules": {},
            "classes": {
                "wsc.Protocol": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/storage.js": {
            "name": "src/storage.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/transport.js": {
            "name": "src/transport.js",
            "modules": {},
            "classes": {
                "wsc.Transport": 1,
                "wsc.WebSocket": 1,
                "wsc.SocketIO": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "wsc": {
            "name": "wsc",
            "submodules": {
                "dAmn": 1
            },
            "classes": {
                "dAmn.Extension": 1,
                "dAmn.avatar": 1,
                "dAmn.Stash": 1,
                "dAmn.TablumpString": 1,
                "dAmn.TablumpParser": 1,
                "wsc.Channel": 1,
                "wsc.Client": 1,
                "wsc.defaults.Extension": 1,
                "wsc.Control": 1,
                "EventEmitter": 1,
                "wsc.Flow": 1,
                "wsc.MessageString": 1,
                "wsc.MessageParser": 1,
                "wsc.Middleware": 1,
                "wsc.Packet": 1,
                "wsc.Protocol": 1,
                "wsc.Transport": 1,
                "wsc.WebSocket": 1,
                "wsc.SocketIO": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/transport.js",
            "line": 240,
            "description": "WebSocket Chat client module."
        },
        "dAmn": {
            "name": "dAmn",
            "submodules": {},
            "classes": {},
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "wsc",
            "namespace": "",
            "file": "src/dAmn/base.js",
            "line": 1,
            "description": "dAmn module lolol."
        }
    },
    "classes": {
        "dAmn.Extension": {
            "name": "dAmn.Extension",
            "shortname": "dAmn.Extension",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "wsc",
            "namespace": "",
            "file": "src/dAmn/extension.js",
            "line": 2,
            "description": "The dAmn extension makes the client work with dAmn. This extension also implements\nvarious other features to improve on the user experience.",
            "is_constructor": 1
        },
        "dAmn.avatar": {
            "name": "dAmn.avatar",
            "shortname": "dAmn.avatar",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "wsc",
            "namespace": "",
            "file": "src/dAmn/icon.js",
            "line": 2,
            "description": "This object provides a few helper functions relating to deviantART avatars."
        },
        "dAmn.Stash": {
            "name": "dAmn.Stash",
            "shortname": "dAmn.Stash",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "wsc",
            "namespace": "",
            "file": "src/dAmn/stash.js",
            "line": 2,
            "description": "Extension to handle stash links posted in the chat. Provides some helper functions\nto meet this end as well."
        },
        "dAmn.TablumpString": {
            "name": "dAmn.TablumpString",
            "shortname": "dAmn.TablumpString",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "wsc",
            "namespace": "",
            "file": "src/dAmn/tablumps.js",
            "line": 1,
            "description": "Represents a string that possibly contains tablumps.\nUse different object methods to render the tablumps differently.",
            "example": [
                "\n    // Parse something.\n    var msg = new wsc.TablumpString('hey, check &b\\t&a\\thttp://google.com\\tgoogle.com\\tgoogle&/a\\t&/b\\t for answers.');\n    console.log(msg.raw); // 'hey, check &b\\t&a\\thttp://google.com\\tgoogle.com\\tgoogle&/a\\t&/b\\t for answers.'\n    console.log(msg.text()); // 'hey, check [link:http://google.com]google[/link] for answers.'\n    console.log(msg.html()); // 'hey, check <b><a href=\"http://google.com\">google</a></b> for answers.'\n    console.log(msg.ansi()); // 'hey, check \\x1b[1m[link:http://google.com]google[/link]\\x1b[22m for answers.'"
            ],
            "extends": "wsc.MessageString",
            "is_constructor": 1,
            "params": [
                {
                    "name": "data",
                    "description": "String possibly containing tablumps.",
                    "type": "String"
                },
                {
                    "name": "parser",
                    "description": "A reference to a tablumps parser.",
                    "type": "Object",
                    "optional": true
                }
            ]
        },
        "dAmn.TablumpParser": {
            "name": "dAmn.TablumpParser",
            "shortname": "dAmn.TablumpParser",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "wsc",
            "namespace": "",
            "file": "src/dAmn/tablumps.js",
            "line": 84,
            "description": "Parser for dAmn Tablumps.",
            "extends": "wsc.MessageParser",
            "is_constructor": 1
        },
        "wsc.Channel": {
            "name": "wsc.Channel",
            "shortname": "wsc.Channel",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "wsc",
            "namespace": "",
            "file": "src/channel.js",
            "line": 1,
            "description": "Chat channel object.\nManages channel events and data, and acts as a thin wrapper for the\nchannel's UI object.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "client",
                    "description": "Wsc chat client object.",
                    "type": "Object"
                },
                {
                    "name": "ns",
                    "description": "Channel namespace.",
                    "type": "String"
                },
                {
                    "name": "hidden",
                    "description": "Should the channel tab be hidden?",
                    "type": "Boolean"
                }
            ]
        },
        "wsc.Client": {
            "name": "wsc.Client",
            "shortname": "wsc.Client",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "wsc",
            "namespace": "",
            "file": "src/client.js",
            "line": 1,
            "description": "An entire chat client. Instances of this object orchestrate the operation of\nthe client. Other objects are loaded in to control different parts of the client. These\ncomponents can be reasonably swapped out, assuming they provide the same functionality.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "view",
                    "description": "The client's container element.",
                    "type": "Object"
                },
                {
                    "name": "options",
                    "description": "Configuration options for the client.",
                    "type": "Object"
                },
                {
                    "name": "mozilla",
                    "description": "Is firefox being used?",
                    "type": "Object"
                }
            ],
            "since": "0.0.1"
        },
        "wsc.defaults.Extension": {
            "name": "wsc.defaults.Extension",
            "shortname": "wsc.defaults.Extension",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "wsc",
            "namespace": "",
            "file": "src/commands.js",
            "line": 3,
            "description": "This extension implements most of the default commands for wsc.",
            "is_constructor": 1
        },
        "wsc.Control": {
            "name": "wsc.Control",
            "shortname": "wsc.Control",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "wsc",
            "namespace": "",
            "file": "src/control.js",
            "line": 1,
            "description": "Controls the input panel of the client.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "client",
                    "description": "wsc.Client object.",
                    "type": "Object"
                }
            ]
        },
        "EventEmitter": {
            "name": "EventEmitter",
            "shortname": "EventEmitter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "wsc",
            "namespace": "",
            "file": "src/events.js",
            "line": 12,
            "description": "Event emitter object emits events and stuff.",
            "is_constructor": 1
        },
        "wsc.Flow": {
            "name": "wsc.Flow",
            "shortname": "wsc.Flow",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "wsc",
            "namespace": "",
            "file": "src/flow.js",
            "line": 1,
            "description": "Control the client's program flow. This object determines how the client responds to\ncertain events.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "protocol",
                    "description": "Protocol object.",
                    "type": "Object"
                }
            ]
        },
        "wsc.MessageString": {
            "name": "wsc.MessageString",
            "shortname": "wsc.MessageString",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "wsc",
            "namespace": "",
            "file": "src/messages.js",
            "line": 1,
            "description": "Rendered message object.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "data",
                    "description": "Unparsed message.",
                    "type": "String"
                },
                {
                    "name": "parser",
                    "description": "Object used to parse messages.",
                    "type": "Object",
                    "optional": true,
                    "optdefault": "wsc.MessageParser"
                }
            ]
        },
        "wsc.MessageParser": {
            "name": "wsc.MessageParser",
            "shortname": "wsc.MessageParser",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "wsc",
            "namespace": "",
            "file": "src/messages.js",
            "line": 47,
            "description": "A parser for formatted messages.",
            "is_constructor": 1
        },
        "wsc.Middleware": {
            "name": "wsc.Middleware",
            "shortname": "wsc.Middleware",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "wsc",
            "namespace": "",
            "file": "src/middleware.js",
            "line": 2,
            "description": "Middleware management and execution.",
            "is_constructor": 1
        },
        "wsc.Packet": {
            "name": "wsc.Packet",
            "shortname": "wsc.Packet",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "wsc",
            "namespace": "",
            "file": "src/packet.js",
            "line": 7,
            "description": "Parses a raw packet into a usable object.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "data",
                    "description": "Raw packet data",
                    "type": "String"
                },
                {
                    "name": "separator",
                    "description": "Separator character used to delimit arguments",
                    "type": "String",
                    "optional": true,
                    "optdefault": "'"
                }
            ]
        },
        "wsc.Protocol": {
            "name": "wsc.Protocol",
            "shortname": "wsc.Protocol",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "wsc",
            "namespace": "",
            "file": "src/protocol.js",
            "line": 1,
            "description": "Parser for dAmn-like protocols.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "mparser",
                    "description": "Message parser instance.",
                    "type": "Object",
                    "optional": true,
                    "optdefault": "wsc.MessageParser"
                }
            ]
        },
        "wsc.Transport": {
            "name": "wsc.Transport",
            "shortname": "wsc.Transport",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "wsc",
            "namespace": "",
            "file": "src/transport.js",
            "line": 1,
            "description": "Client transport.\nActs as a basic wrapper around a transport.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "server",
                    "description": "Address for the server to connect to.",
                    "type": "String"
                },
                {
                    "name": "open",
                    "description": "This method will be called when\n  a connection is established with the server.",
                    "type": "Method",
                    "optional": true,
                    "optdefault": "wsc.Transport.sopen"
                },
                {
                    "name": "message",
                    "description": "When a message is received\n  on the transport, this method will be called.",
                    "type": "Method",
                    "optional": true,
                    "optdefault": "wsc.Transport.smessage"
                },
                {
                    "name": "disconnect",
                    "description": "The method to be\n  called when the connection has been closed.",
                    "type": "Method",
                    "optional": true,
                    "optdefault": "wsc.Transport.sdisconnect"
                }
            ]
        },
        "wsc.WebSocket": {
            "name": "wsc.WebSocket",
            "shortname": "wsc.WebSocket",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "wsc",
            "namespace": "",
            "file": "src/transport.js",
            "line": 133,
            "description": "WebSocket transport object.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "server",
                    "description": "Address for the server to connect to.",
                    "type": "String"
                },
                {
                    "name": "open",
                    "description": "This method will be called when\n  a connection is established with the server.",
                    "type": "Method",
                    "optional": true,
                    "optdefault": "wsc.WebSocket.sopen"
                },
                {
                    "name": "message",
                    "description": "When a message is received\n  on the transport, this method will be called.",
                    "type": "Method",
                    "optional": true,
                    "optdefault": "wsc.WebSocket.smessage"
                },
                {
                    "name": "disconnect",
                    "description": "The method to be\n  called when the connection has been closed.",
                    "type": "Method",
                    "optional": true,
                    "optdefault": "wsc.WebSocket.sdisconnect"
                }
            ]
        },
        "wsc.SocketIO": {
            "name": "wsc.SocketIO",
            "shortname": "wsc.SocketIO",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "wsc",
            "namespace": "",
            "file": "src/transport.js",
            "line": 240,
            "description": "SocketIO wrapper.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "server",
                    "description": "Address for the server to connect to.",
                    "type": "String"
                },
                {
                    "name": "open",
                    "description": "This method will be called when\n  a connection is established with the server.",
                    "type": "Method",
                    "optional": true,
                    "optdefault": "wsc.SocketIO.sopen"
                },
                {
                    "name": "message",
                    "description": "When a message is received\n  on the transport, this method will be called.",
                    "type": "Method",
                    "optional": true,
                    "optdefault": "wsc.SocketIO.smessage"
                },
                {
                    "name": "disconnect",
                    "description": "The method to be\n  called when the connection has been closed.",
                    "type": "Method",
                    "optional": true,
                    "optdefault": "wsc.SocketIO.sdisconnect"
                }
            ]
        }
    },
    "classitems": [
        {
            "file": "src/dAmn/emotes.js",
            "line": 375,
            "description": "Emote picker.\nThis should be used for retrieving input from the user.",
            "class": "dAmn.Extension",
            "module": "wsc"
        },
        {
            "file": "src/dAmn/extension.js",
            "line": 95,
            "description": "Implements the Data Sharing Protocol.",
            "itemtype": "method",
            "name": "BDS",
            "class": "dAmn.Extension",
            "module": "wsc"
        },
        {
            "file": "src/dAmn/extension.js",
            "line": 102,
            "description": "Implements Data Sharing Links. Links are private chats between two clients that\nare used for exchanging information autonomously.",
            "itemtype": "method",
            "name": "BDS.Link",
            "class": "dAmn.Extension",
            "module": "wsc"
        },
        {
            "file": "src/dAmn/extension.js",
            "line": 110,
            "description": "Implements custom colours.",
            "itemtype": "method",
            "name": "Colours",
            "class": "dAmn.Extension",
            "module": "wsc"
        },
        {
            "file": "src/dAmn/extension.js",
            "line": 117,
            "description": "Implements custom emoticons.",
            "itemtype": "method",
            "name": "Emotes",
            "class": "dAmn.Extension",
            "module": "wsc"
        },
        {
            "file": "src/dAmn/extension.js",
            "line": 124,
            "description": "Implements Sta.sh thumbnails.",
            "itemtype": "method",
            "name": "Stash",
            "class": "dAmn.Extension",
            "module": "wsc"
        },
        {
            "file": "src/dAmn/icon.js",
            "line": 9,
            "description": "An array containing the different file types avatars can be.",
            "itemtype": "property",
            "name": "ext",
            "type": "Array",
            "default": "[ 'gif', 'gif', 'jpg', 'png' ]",
            "class": "dAmn.avatar",
            "module": "wsc"
        },
        {
            "file": "src/dAmn/icon.js",
            "line": 18,
            "description": "Produces an avatar link.",
            "itemtype": "method",
            "name": "link",
            "params": [
                {
                    "name": "un",
                    "description": "Username to generate an avatar link for",
                    "type": "String"
                },
                {
                    "name": "icon",
                    "description": "Icon number as provided by dAmn's protocol",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Valid avatar link",
                "type": "String"
            },
            "class": "dAmn.avatar",
            "module": "wsc"
        },
        {
            "file": "src/dAmn/icon.js",
            "line": 35,
            "description": "Works out the source url for an avatar.",
            "itemtype": "method",
            "name": "src",
            "params": [
                {
                    "name": "un",
                    "description": "Username to resolve the avatar source for",
                    "type": "String"
                },
                {
                    "name": "icon",
                    "description": "The user's icon number",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The source URL",
                "type": "String"
            },
            "class": "dAmn.avatar",
            "module": "wsc"
        },
        {
            "file": "src/dAmn/linkbds.js",
            "line": 120,
            "description": "BDS Event handlers.",
            "class": "dAmn.Stash",
            "module": "wsc"
        },
        {
            "file": "src/dAmn/linkbds.js",
            "line": 170,
            "description": "dAmn Event handlers",
            "class": "dAmn.Stash",
            "module": "wsc"
        },
        {
            "file": "src/dAmn/stash.js",
            "line": 36,
            "description": "Fetch stash data.",
            "class": "dAmn.Stash",
            "module": "wsc"
        },
        {
            "file": "src/dAmn/stash.js",
            "line": 51,
            "description": "Render a stash thumb.",
            "class": "dAmn.Stash",
            "module": "wsc"
        },
        {
            "file": "src/dAmn/tablumps.js",
            "line": 36,
            "itemtype": "method",
            "name": "html\n\nRender the tablumps as HTML entities.",
            "class": "dAmn.TablumpString",
            "module": "wsc"
        },
        {
            "file": "src/dAmn/tablumps.js",
            "line": 47,
            "itemtype": "method",
            "name": "text\n\nRender the tablumps in plain text where possible. Some tablumps appear as\nHTML entities even through this.",
            "class": "dAmn.TablumpString",
            "module": "wsc"
        },
        {
            "file": "src/dAmn/tablumps.js",
            "line": 59,
            "itemtype": "method",
            "name": "ansi\n\nRender the tablumps with ANSI escape sequences.\n\nFor this rendering method to really be worth it, I'll actually have to move\naway from the simple regex.",
            "class": "dAmn.TablumpString",
            "module": "wsc"
        },
        {
            "file": "src/dAmn/tablumps.js",
            "line": 74,
            "description": "States for the parser.",
            "class": "dAmn.TablumpString",
            "module": "wsc"
        },
        {
            "file": "src/dAmn/tablumps.js",
            "line": 93,
            "description": "This object holds each tablump's parsing and rendering rules. For each tablump,\nthere is a key, which is the tablump's head, or \"tag\". The entry is an array\nwith the number of arguments in the tablump, followed by different renderers.\nAs a generalisation, it looks like this:\n\n     this.lumps[tag] = [ arguments, render_text, render_html, render_ansi ];\n\nRenderers can be formatting strings or functions. All renderers other than the\nfirst one are optional. If a particular render is not available, the rendering step\nfalls back to the first renderer in the Array. As a brief example, this is what the\nimg tag's entry looks like:\n     \n     this.lumps['&img\\t'] = [ 3, '<img src=\"{0}\" alt=\"{1}\" title=\"{2}\" />'];",
            "itemtype": "property",
            "name": "lumps",
            "type": "Object",
            "class": "dAmn.TablumpParser",
            "module": "wsc"
        },
        {
            "file": "src/dAmn/tablumps.js",
            "line": 118,
            "description": "I should probably deprecate this. Sets the rendering map to the given map.",
            "itemtype": "method",
            "name": "registerMap",
            "deprecated": true,
            "class": "dAmn.TablumpParser",
            "module": "wsc"
        },
        {
            "file": "src/dAmn/tablumps.js",
            "line": 127,
            "description": "Add the given rendering items to the parser's render map.",
            "itemtype": "method",
            "name": "extend",
            "class": "dAmn.TablumpParser",
            "module": "wsc"
        },
        {
            "file": "src/dAmn/tablumps.js",
            "line": 137,
            "description": "Get all the default nonsense.",
            "itemtype": "method",
            "name": "defaultMap",
            "class": "dAmn.TablumpParser",
            "module": "wsc"
        },
        {
            "file": "src/dAmn/tablumps.js",
            "line": 222,
            "description": "Parse a message into tokens and return it as a\n{{#crossLink \"dAmn.TablumpString\"}}{{/crossLink}} object.",
            "itemtype": "method",
            "name": "parse",
            "params": [
                {
                    "name": "data",
                    "description": "Message to parse",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Parsed tablump string",
                "type": "Object"
            },
            "class": "dAmn.TablumpParser",
            "module": "wsc"
        },
        {
            "file": "src/dAmn/tablumps.js",
            "line": 236,
            "description": "Parse a message possibly containing tablumps into tokens.",
            "itemtype": "method",
            "name": "tokenise",
            "params": [
                {
                    "name": "data",
                    "description": "Message to parse",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Tokens",
                "type": "Array"
            },
            "class": "dAmn.TablumpParser",
            "module": "wsc"
        },
        {
            "file": "src/dAmn/tablumps.js",
            "line": 336,
            "description": "Render tablumps in a given format.\n\nHere, the flag should be a number, and defines the index of the renderer\nto use when rendering a tablump. Setting `flag` to 0 will result in the\nfirst renderer being used. In the render map, the plain text renderers come\nfirst, and also act as a default.\n\nSetting `flag` to 1 causes the parser to render tablumps as HTML elements\nwhere possible. Setting `flag` to 2 causes the parser to render tablumps as\nANSI escape sequence formatted strings where possible.",
            "itemtype": "method",
            "name": "render",
            "params": [
                {
                    "name": "flag",
                    "description": "Determines how the message should be rendered",
                    "type": "Integer"
                },
                {
                    "name": "data",
                    "description": "TablumpString to be rendered",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Rendered tablump string",
                "type": "String"
            },
            "class": "dAmn.TablumpParser",
            "module": "wsc"
        },
        {
            "file": "src/dAmn/tablumps.js",
            "line": 383,
            "description": "Render a single tablump.",
            "itemtype": "method",
            "name": "renderOne",
            "params": [
                {
                    "name": "type",
                    "description": "Type of renderer to use",
                    "type": "Integer"
                },
                {
                    "name": "tag",
                    "description": "Name of the tablump tag",
                    "type": "String"
                },
                {
                    "name": "tokens",
                    "description": "Tablump arguments",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "The rendered tablump",
                "type": "String"
            },
            "class": "dAmn.TablumpParser",
            "module": "wsc"
        },
        {
            "file": "src/autojoin.js",
            "line": 1,
            "description": "Autojoin extension.",
            "class": "wsc.Channel",
            "module": "wsc"
        },
        {
            "file": "src/away.js",
            "line": 1,
            "description": "Away extension.",
            "class": "wsc.Channel",
            "module": "wsc"
        },
        {
            "file": "src/channel.js",
            "line": 41,
            "description": "Create a UI view for this channel.",
            "itemtype": "method",
            "name": "build",
            "class": "wsc.Channel",
            "module": "wsc"
        },
        {
            "file": "src/channel.js",
            "line": 52,
            "description": "Remove this channel from the screen entirely.",
            "itemtype": "method",
            "name": "remove",
            "class": "wsc.Channel",
            "module": "wsc"
        },
        {
            "file": "src/channel.js",
            "line": 63,
            "description": "Hide the channel view in the UI.",
            "itemtype": "method",
            "name": "hide",
            "class": "wsc.Channel",
            "module": "wsc"
        },
        {
            "file": "src/channel.js",
            "line": 74,
            "description": "Show the channel view in the UI.",
            "itemtype": "method",
            "name": "show",
            "class": "wsc.Channel",
            "module": "wsc"
        },
        {
            "file": "src/channel.js",
            "line": 85,
            "description": "Display a log message.",
            "itemtype": "method",
            "name": "log",
            "params": [
                {
                    "name": "msg",
                    "description": "Log message to display.",
                    "type": "String"
                }
            ],
            "class": "wsc.Channel",
            "module": "wsc"
        },
        {
            "file": "src/channel.js",
            "line": 97,
            "description": "Send a message to the log window.",
            "itemtype": "method",
            "name": "log_item",
            "params": [
                {
                    "name": "msg",
                    "description": "Message to send.",
                    "type": "String"
                }
            ],
            "class": "wsc.Channel",
            "module": "wsc"
        },
        {
            "file": "src/channel.js",
            "line": 109,
            "description": "Send a server message to the log window.",
            "itemtype": "method",
            "name": "server_message",
            "params": [
                {
                    "name": "msg",
                    "description": "Server message.",
                    "type": "String"
                },
                {
                    "name": "info",
                    "description": "Extra information for the message.",
                    "type": "String",
                    "optional": true
                }
            ],
            "class": "wsc.Channel",
            "module": "wsc"
        },
        {
            "file": "src/channel.js",
            "line": 122,
            "description": "Clear all log messages from the log window.",
            "itemtype": "method",
            "name": "clear",
            "class": "wsc.Channel",
            "module": "wsc"
        },
        {
            "file": "src/channel.js",
            "line": 137,
            "description": "Display a user's whois info.",
            "itemtype": "method",
            "name": "log_whois",
            "params": [
                {
                    "name": "data",
                    "description": "Object containing a user's information.",
                    "type": "Object"
                }
            ],
            "class": "wsc.Channel",
            "module": "wsc"
        },
        {
            "file": "src/channel.js",
            "line": 149,
            "description": "Display some information relating to a privilege class.",
            "itemtype": "method",
            "name": "log_pc",
            "params": [
                {
                    "name": "privileges",
                    "description": "Are we showing privileges or users?",
                    "type": "Boolean"
                },
                {
                    "name": "data",
                    "description": "Array containing information.",
                    "type": "Array"
                }
            ],
            "class": "wsc.Channel",
            "module": "wsc"
        },
        {
            "file": "src/channel.js",
            "line": 162,
            "description": "Process a channel property packet.",
            "itemtype": "method",
            "name": "property",
            "params": [
                {
                    "name": "e",
                    "description": "Event data for the property packet.",
                    "type": "Object"
                }
            ],
            "class": "wsc.Channel",
            "module": "wsc"
        },
        {
            "file": "src/channel.js",
            "line": 195,
            "description": "Set the channel header.\nThis can be the title or topic, determined by `head`.",
            "itemtype": "method",
            "name": "set_header",
            "params": [
                {
                    "name": "e",
                    "description": "Event data for the property packet.",
                    "type": "Object"
                }
            ],
            "class": "wsc.Channel",
            "module": "wsc"
        },
        {
            "file": "src/channel.js",
            "line": 213,
            "description": "Set the channel's privclasses.",
            "itemtype": "method",
            "name": "set_privclasses",
            "params": [
                {
                    "name": "e",
                    "description": "Event data for the property packet.",
                    "type": "Object"
                }
            ],
            "class": "wsc.Channel",
            "module": "wsc"
        },
        {
            "file": "src/channel.js",
            "line": 236,
            "description": "Get the order of a given privilege class.",
            "itemtype": "method",
            "name": "get_privclass_order",
            "params": [
                {
                    "name": "name",
                    "description": "Name of the privilege class to get the order of.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The order of the privilege class.",
                "type": "Integer"
            },
            "class": "wsc.Channel",
            "module": "wsc"
        },
        {
            "file": "src/channel.js",
            "line": 253,
            "description": "Store each member of the this.",
            "itemtype": "method",
            "name": "set_members",
            "params": [
                {
                    "name": "e",
                    "description": "Event data for the property packet.",
                    "type": "Object"
                }
            ],
            "class": "wsc.Channel",
            "module": "wsc"
        },
        {
            "file": "src/channel.js",
            "line": 271,
            "description": "Set the channel user list.",
            "itemtype": "method",
            "name": "set_user_list",
            "class": "wsc.Channel",
            "module": "wsc"
        },
        {
            "file": "src/channel.js",
            "line": 334,
            "description": "Register a user with the channel.",
            "itemtype": "method",
            "name": "register_user",
            "params": [
                {
                    "name": "pkt",
                    "description": "User data.",
                    "type": "Object"
                }
            ],
            "class": "wsc.Channel",
            "module": "wsc"
        },
        {
            "file": "src/channel.js",
            "line": 357,
            "description": "Return a list of usernames, sorted alphabetically.",
            "itemtype": "method",
            "name": "get_usernames",
            "class": "wsc.Channel",
            "module": "wsc"
        },
        {
            "file": "src/channel.js",
            "line": 373,
            "description": "Remove a user from the channel.",
            "itemtype": "method",
            "name": "remove_user",
            "params": [
                {
                    "name": "user",
                    "description": "Name of the user to remove.",
                    "type": "String"
                }
            ],
            "class": "wsc.Channel",
            "module": "wsc"
        },
        {
            "file": "src/channel.js",
            "line": 394,
            "description": "Process a recv_join event.",
            "itemtype": "method",
            "name": "recv_join",
            "params": [
                {
                    "name": "e",
                    "description": "Event data for recv_join packet.",
                    "type": "Object"
                }
            ],
            "class": "wsc.Channel",
            "module": "wsc"
        },
        {
            "file": "src/channel.js",
            "line": 406,
            "description": "Process a recv_part event.",
            "itemtype": "method",
            "name": "recv_part",
            "params": [
                {
                    "name": "e",
                    "description": "Event data for recv_part packet.",
                    "type": "Object"
                }
            ],
            "class": "wsc.Channel",
            "module": "wsc"
        },
        {
            "file": "src/channel.js",
            "line": 419,
            "description": "Process a recv_msg event.",
            "itemtype": "method",
            "name": "recv_msg",
            "params": [
                {
                    "name": "e",
                    "description": "Event data for recv_msg packet.",
                    "type": "Object"
                }
            ],
            "class": "wsc.Channel",
            "module": "wsc"
        },
        {
            "file": "src/channel.js",
            "line": 450,
            "description": "Process a recv_privchg event.",
            "itemtype": "method",
            "name": "recv_privchg",
            "params": [
                {
                    "name": "e",
                    "description": "Event data for recv_privhcg packet.",
                    "type": "Object"
                }
            ],
            "class": "wsc.Channel",
            "module": "wsc"
        },
        {
            "file": "src/channel.js",
            "line": 466,
            "description": "Process a recv_kicked event.",
            "itemtype": "method",
            "name": "recv_kicked",
            "params": [
                {
                    "name": "e",
                    "description": "Event data for recv_kicked packet.",
                    "type": "Object"
                }
            ],
            "class": "wsc.Channel",
            "module": "wsc"
        },
        {
            "file": "src/client.js",
            "line": 25,
            "description": "An instance of a protocol parser.",
            "itemtype": "property",
            "name": "protocol",
            "type": "{Object}",
            "default": "wsc.Protocol",
            "class": "wsc.Client",
            "module": "wsc"
        },
        {
            "file": "src/client.js",
            "line": 116,
            "description": "Load configuration from localStorage.",
            "itemtype": "method",
            "name": "config_load",
            "class": "wsc.Client",
            "module": "wsc"
        },
        {
            "file": "src/client.js",
            "line": 146,
            "description": "Save configuration save localStorage.",
            "itemtype": "method",
            "name": "config_save",
            "class": "wsc.Client",
            "module": "wsc"
        },
        {
            "file": "src/client.js",
            "line": 181,
            "description": "Build the client interface and hook up any required event handlers for the\ninterface. In particular, event handlers are hooked for switching and\nclosing channel tabs.",
            "itemtype": "method",
            "name": "build",
            "class": "wsc.Client",
            "module": "wsc"
        },
        {
            "file": "src/client.js",
            "line": 218,
            "description": "Called every now and then.\nDoes stuff like clear channels of excess log messages.\nMaybe this is something that the UI lib should handle.",
            "itemtype": "method",
            "name": "loop",
            "class": "wsc.Client",
            "module": "wsc"
        },
        {
            "file": "src/client.js",
            "line": 231,
            "description": "Add an extension to the client.",
            "itemtype": "method",
            "name": "add_extension",
            "params": [
                {
                    "name": "extension",
                    "description": "Extension constructor. Not called with `new`.",
                    "type": "Method"
                }
            ],
            "class": "wsc.Client",
            "module": "wsc"
        },
        {
            "file": "src/client.js",
            "line": 244,
            "description": "Bind a method to an event.",
            "itemtype": "method",
            "name": "bind",
            "params": [
                {
                    "name": "event",
                    "description": "Name of the event to listen for.",
                    "type": "String"
                },
                {
                    "name": "handler",
                    "description": "Method to call when the given event is triggered.",
                    "type": "Method"
                }
            ],
            "class": "wsc.Client",
            "module": "wsc"
        },
        {
            "file": "src/client.js",
            "line": 263,
            "description": "Clear event listeners for a given event.",
            "itemtype": "method",
            "name": "clear_listeners",
            "params": [
                {
                    "name": "event",
                    "description": "Event to clear listeners for.",
                    "type": "String"
                }
            ],
            "class": "wsc.Client",
            "module": "wsc"
        },
        {
            "file": "src/client.js",
            "line": 275,
            "description": "Trigger an event.",
            "itemtype": "method",
            "name": "trigger",
            "params": [
                {
                    "name": "event",
                    "description": "Name of the event to trigger.",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "Event data.",
                    "type": "Object"
                }
            ],
            "class": "wsc.Client",
            "module": "wsc"
        },
        {
            "file": "src/client.js",
            "line": 288,
            "description": "Add a middleware method.",
            "itemtype": "method",
            "name": "middle",
            "class": "wsc.Client",
            "module": "wsc"
        },
        {
            "file": "src/client.js",
            "line": 299,
            "description": "Run a method with middleware.",
            "itemtype": "method",
            "name": "cascade",
            "class": "wsc.Client",
            "module": "wsc"
        },
        {
            "file": "src/client.js",
            "line": 310,
            "description": "Open a connection to the chat server.\nIf the client if already connected, nothing happens.",
            "itemtype": "method",
            "name": "connect",
            "class": "wsc.Client",
            "module": "wsc"
        },
        {
            "file": "src/client.js",
            "line": 341,
            "description": "Close the connection foo.",
            "itemtype": "method",
            "name": "close",
            "class": "wsc.Client",
            "module": "wsc"
        },
        {
            "file": "src/client.js",
            "line": 354,
            "description": "Get or set the channel object associated with the given namespace.",
            "itemtype": "method",
            "name": "channel",
            "params": [
                {
                    "name": "namespace",
                    "description": "Channel namespace to get or set.",
                    "type": "String"
                },
                {
                    "name": "channel",
                    "description": "Channel object to use for the given namespace.",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "Channel object associated with the given namespace.",
                "type": "Object"
            },
            "class": "wsc.Client",
            "module": "wsc"
        },
        {
            "file": "src/client.js",
            "line": 373,
            "description": "Get a count of the number of channels the client has open.\nChannels with their tabs hidden are not counted.",
            "itemtype": "method",
            "name": "channels",
            "params": [
                {
                    "name": "names",
                    "description": "Return the names of the open channels?",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "Number of channels open.",
                "type": "Integer"
            },
            "class": "wsc.Client",
            "module": "wsc"
        },
        {
            "file": "src/client.js",
            "line": 395,
            "description": "Iterate through the different channels.",
            "itemtype": "method",
            "name": "each_channel",
            "params": [
                {
                    "name": "method",
                    "description": "Function to call for each channel.",
                    "type": "Function"
                }
            ],
            "class": "wsc.Client",
            "module": "wsc"
        },
        {
            "file": "src/client.js",
            "line": 421,
            "description": "Deform a channel namespace to its shorthand form.",
            "itemtype": "method",
            "name": "deform_ns",
            "params": [
                {
                    "name": "namespace",
                    "description": "Namespace to deform.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Shorthand channel namespace.",
                "type": "String"
            },
            "class": "wsc.Client",
            "module": "wsc"
        },
        {
            "file": "src/client.js",
            "line": 457,
            "description": "Format a channel namespace in its longhand form.",
            "itemtype": "method",
            "name": "format_ns",
            "params": [
                {
                    "name": "namespace",
                    "description": "Channel namespace to format.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Formatted namespace.",
                "type": "String"
            },
            "class": "wsc.Client",
            "module": "wsc"
        },
        {
            "file": "src/client.js",
            "line": 485,
            "description": "Create a channel object for the client.",
            "itemtype": "method",
            "name": "create_ns",
            "params": [
                {
                    "name": "namespace",
                    "description": "Namespace to use for the channel.",
                    "type": "String"
                },
                {
                    "name": "hidden",
                    "description": "Should the channel tab be hidden?",
                    "type": "Boolean"
                }
            ],
            "class": "wsc.Client",
            "module": "wsc"
        },
        {
            "file": "src/client.js",
            "line": 499,
            "description": "Remove a channel object from the client.",
            "itemtype": "method",
            "name": "remove_ns",
            "params": [
                {
                    "name": "namespace",
                    "description": "Namespace of the channel to remove.",
                    "type": "String"
                }
            ],
            "class": "wsc.Client",
            "module": "wsc"
        },
        {
            "file": "src/client.js",
            "line": 519,
            "description": "Write a log message to a channel's log view.",
            "itemtype": "method",
            "name": "log",
            "params": [
                {
                    "name": "namespace",
                    "description": "Namespace of the channel to log to.",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "Message to display.",
                    "type": "String"
                }
            ],
            "class": "wsc.Client",
            "module": "wsc"
        },
        {
            "file": "src/client.js",
            "line": 537,
            "description": "Write a message to the client monitor.",
            "itemtype": "method",
            "name": "monitor",
            "params": [
                {
                    "name": "message",
                    "description": "Message to display.",
                    "type": "String"
                }
            ],
            "class": "wsc.Client",
            "module": "wsc"
        },
        {
            "file": "src/client.js",
            "line": 549,
            "description": "Mute a user.",
            "itemtype": "method",
            "name": "mute_user",
            "params": [
                {
                    "name": "user",
                    "description": "User to mute.",
                    "type": "String"
                }
            ],
            "class": "wsc.Client",
            "module": "wsc"
        },
        {
            "file": "src/client.js",
            "line": 561,
            "description": "Unmute a user.",
            "itemtype": "method",
            "name": "unmute_user",
            "params": [
                {
                    "name": "user",
                    "description": "User to unmute.",
                    "type": "String"
                }
            ],
            "class": "wsc.Client",
            "module": "wsc"
        },
        {
            "file": "src/client.js",
            "line": 575,
            "description": "Send a packet to the server.",
            "itemtype": "method",
            "name": "send",
            "params": [
                {
                    "name": "data",
                    "description": "Packet to send.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Number of characters written to the server.\n  -1 for failure.",
                "type": "Integer"
            },
            "class": "wsc.Client",
            "module": "wsc"
        },
        {
            "file": "src/client.js",
            "line": 589,
            "description": "Send a handshake packet.",
            "itemtype": "method",
            "name": "handshake",
            "class": "wsc.Client",
            "module": "wsc"
        },
        {
            "file": "src/client.js",
            "line": 602,
            "description": "Send a login packet.",
            "itemtype": "method",
            "name": "login",
            "class": "wsc.Client",
            "module": "wsc"
        },
        {
            "file": "src/client.js",
            "line": 614,
            "description": "Send a pong packet to the server.",
            "itemtype": "method",
            "name": "pong",
            "class": "wsc.Client",
            "module": "wsc"
        },
        {
            "file": "src/client.js",
            "line": 625,
            "description": "Join a channel.",
            "itemtype": "method",
            "name": "join",
            "params": [
                {
                    "name": "namespace",
                    "description": "Channel to join.",
                    "type": "String"
                }
            ],
            "class": "wsc.Client",
            "module": "wsc"
        },
        {
            "file": "src/client.js",
            "line": 637,
            "description": "Leave a channel.",
            "itemtype": "method",
            "name": "part",
            "params": [
                {
                    "name": "namespace",
                    "description": "Channel to leave.",
                    "type": "String"
                }
            ],
            "class": "wsc.Client",
            "module": "wsc"
        },
        {
            "file": "src/client.js",
            "line": 649,
            "description": "Send a message to a channel.",
            "itemtype": "method",
            "name": "say",
            "params": [
                {
                    "name": "namespace",
                    "description": "Channel to send a message to.",
                    "type": "String"
                },
                {
                    "name": "message",
                    "description": "Message to send.",
                    "type": "String"
                }
            ],
            "class": "wsc.Client",
            "module": "wsc"
        },
        {
            "file": "src/client.js",
            "line": 669,
            "description": "Send a non-parsed message to a channel.",
            "itemtype": "method",
            "name": "npmsg",
            "params": [
                {
                    "name": "namespace",
                    "description": "Channel to send a message to.",
                    "type": "String"
                },
                {
                    "name": "message",
                    "description": "Message to send.",
                    "type": "String"
                }
            ],
            "class": "wsc.Client",
            "module": "wsc"
        },
        {
            "file": "src/client.js",
            "line": 689,
            "description": "Send an action message to a channel.",
            "itemtype": "method",
            "name": "action",
            "params": [
                {
                    "name": "namespace",
                    "description": "Channel to send a message to.",
                    "type": "String"
                },
                {
                    "name": "message",
                    "description": "Message to send.",
                    "type": "String"
                }
            ],
            "class": "wsc.Client",
            "module": "wsc"
        },
        {
            "file": "src/client.js",
            "line": 709,
            "description": "Promote a user in a channel.",
            "itemtype": "method",
            "name": "promote",
            "params": [
                {
                    "name": "namespace",
                    "description": "Channel to promote someone in.",
                    "type": "String"
                },
                {
                    "name": "user",
                    "description": "User to promote.",
                    "type": "String"
                },
                {
                    "name": "pc",
                    "description": "Privclass to promote the user to.",
                    "type": "String",
                    "optional": true
                }
            ],
            "class": "wsc.Client",
            "module": "wsc"
        },
        {
            "file": "src/client.js",
            "line": 724,
            "description": "Demote a user in a channel.",
            "itemtype": "method",
            "name": "demote",
            "params": [
                {
                    "name": "namespace",
                    "description": "Channel to demote someone in.",
                    "type": "String"
                },
                {
                    "name": "user",
                    "description": "User to demote.",
                    "type": "String"
                },
                {
                    "name": "pc",
                    "description": "Privclass to demote the user to.",
                    "type": "String",
                    "optional": true
                }
            ],
            "class": "wsc.Client",
            "module": "wsc"
        },
        {
            "file": "src/client.js",
            "line": 739,
            "description": "Ban a user from a channel.",
            "itemtype": "method",
            "name": "ban",
            "params": [
                {
                    "name": "namespace",
                    "description": "Channel to ban someone from.",
                    "type": "String"
                },
                {
                    "name": "user",
                    "description": "User to ban.",
                    "type": "String"
                }
            ],
            "class": "wsc.Client",
            "module": "wsc"
        },
        {
            "file": "src/client.js",
            "line": 753,
            "description": "Unban a user from a channel.",
            "itemtype": "method",
            "name": "unban",
            "params": [
                {
                    "name": "namespace",
                    "description": "Channel to unban someone from.",
                    "type": "String"
                },
                {
                    "name": "user",
                    "description": "User to unban.",
                    "type": "String"
                }
            ],
            "class": "wsc.Client",
            "module": "wsc"
        },
        {
            "file": "src/client.js",
            "line": 767,
            "description": "Kick a user from a channel.",
            "itemtype": "method",
            "name": "kick",
            "params": [
                {
                    "name": "namespace",
                    "description": "Channel to kick someone from.",
                    "type": "String"
                },
                {
                    "name": "user",
                    "description": "User to kick.",
                    "type": "String"
                },
                {
                    "name": "reason",
                    "description": "Reason for the kick.",
                    "type": "String",
                    "optional": true
                }
            ],
            "class": "wsc.Client",
            "module": "wsc"
        },
        {
            "file": "src/client.js",
            "line": 786,
            "description": "Kill a user's connection to the server.\nOnly message network admins have access to this packet on the server.",
            "itemtype": "method",
            "name": "kill",
            "params": [
                {
                    "name": "user",
                    "description": "User to kill.",
                    "type": "String"
                },
                {
                    "name": "reason",
                    "description": "Reason for the kill.",
                    "type": "String",
                    "optional": true
                }
            ],
            "class": "wsc.Client",
            "module": "wsc"
        },
        {
            "file": "src/client.js",
            "line": 800,
            "description": "Send an admin comment to a channel.",
            "itemtype": "method",
            "name": "admin",
            "params": [
                {
                    "name": "namespace",
                    "description": "Channel to use for the admin command.",
                    "type": "String"
                },
                {
                    "name": "command",
                    "description": "Command to run.",
                    "type": "String"
                }
            ],
            "class": "wsc.Client",
            "module": "wsc"
        },
        {
            "file": "src/client.js",
            "line": 815,
            "description": "Request a channel property from the server.",
            "itemtype": "method",
            "name": "property",
            "params": [
                {
                    "name": "namespace",
                    "description": "Namespace of the channel to get a property for.",
                    "type": "String"
                },
                {
                    "name": "property",
                    "description": "Name of the property to get.",
                    "type": "String"
                }
            ],
            "class": "wsc.Client",
            "module": "wsc"
        },
        {
            "file": "src/client.js",
            "line": 828,
            "description": "Set a channel property.",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "namespace",
                    "description": "Namespace of the channel to set a property for.",
                    "type": "String"
                },
                {
                    "name": "property",
                    "description": "Name of the property to set. Should be 'title' or\n  'topic'.",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "Value to set the property to.",
                    "type": "String"
                }
            ],
            "class": "wsc.Client",
            "module": "wsc"
        },
        {
            "file": "src/client.js",
            "line": 849,
            "description": "Get whois information for a user.",
            "itemtype": "method",
            "name": "whois",
            "params": [
                {
                    "name": "user",
                    "description": "User to get information for.",
                    "type": "String"
                }
            ],
            "class": "wsc.Client",
            "module": "wsc"
        },
        {
            "file": "src/client.js",
            "line": 861,
            "description": "Send a disconnect packet.",
            "itemtype": "method",
            "name": "disconnect",
            "class": "wsc.Client",
            "module": "wsc"
        },
        {
            "file": "src/commands.js",
            "line": 178,
            "itemtype": "method",
            "name": "setter",
            "cmd": "set set configuration options\nThis command allows the user to change the settings for the client through\nthe input box.",
            "class": "wsc.defaults.Extension",
            "module": "wsc"
        },
        {
            "file": "src/commands.js",
            "line": 204,
            "itemtype": "method",
            "name": "connect\nThis command allows the user to force the client to connect to the server.",
            "class": "wsc.defaults.Extension",
            "module": "wsc"
        },
        {
            "file": "src/commands.js",
            "line": 441,
            "description": "Implements the ignore feature.",
            "itemtype": "method",
            "name": "Ignore",
            "class": "wsc.defaults.Extension",
            "module": "wsc"
        },
        {
            "file": "src/commands.js",
            "line": 448,
            "description": "Implements away messages.",
            "itemtype": "method",
            "name": "Away",
            "class": "wsc.defaults.Extension",
            "module": "wsc"
        },
        {
            "file": "src/commands.js",
            "line": 455,
            "description": "Implements autojoin channels.",
            "itemtype": "method",
            "name": "Autojoin",
            "class": "wsc.defaults.Extension",
            "module": "wsc"
        },
        {
            "file": "src/control.js",
            "line": 26,
            "description": "Steal the lime light. Brings the cursor to the input panel.",
            "itemtype": "method",
            "name": "focus",
            "class": "wsc.Control",
            "module": "wsc"
        },
        {
            "file": "src/control.js",
            "line": 37,
            "description": "Set the input handlers for the input panel.",
            "itemtype": "method",
            "name": "set_input",
            "class": "wsc.Control",
            "module": "wsc"
        },
        {
            "file": "src/control.js",
            "line": 57,
            "description": "Save current input in a cache.",
            "itemtype": "method",
            "name": "cache_input",
            "params": [
                {
                    "name": "event",
                    "description": "Event data.",
                    "type": "Object"
                }
            ],
            "class": "wsc.Control",
            "module": "wsc"
        },
        {
            "file": "src/control.js",
            "line": 75,
            "description": "Get a channel's input history object.\nIf no history object exists for the given channel, a new object is created\nand stored.",
            "itemtype": "method",
            "name": "get_history",
            "params": [
                {
                    "name": "namespace",
                    "description": "Channel to get the history of. If not given, the\n  channel currently being viewed is used.",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "history  Channel's input history data.",
                "type": "Object"
            },
            "class": "wsc.Control",
            "module": "wsc"
        },
        {
            "file": "src/control.js",
            "line": 102,
            "description": "Append an item to the current channel's input history.",
            "itemtype": "method",
            "name": "append_history",
            "params": [
                {
                    "name": "data",
                    "description": "Input string to store.",
                    "type": "String"
                }
            ],
            "class": "wsc.Control",
            "module": "wsc"
        },
        {
            "file": "src/control.js",
            "line": 122,
            "description": "Scroll through the current channel's input history.",
            "itemtype": "method",
            "name": "scroll_history",
            "params": [
                {
                    "name": "up",
                    "description": "Scroll up?",
                    "type": "Boolean"
                }
            ],
            "class": "wsc.Control",
            "module": "wsc"
        },
        {
            "file": "src/control.js",
            "line": 151,
            "description": "Handle the tab character being pressed.",
            "itemtype": "method",
            "name": "tab_item",
            "params": [
                {
                    "name": "event",
                    "description": "Event data.",
                    "type": "Object"
                }
            ],
            "class": "wsc.Control",
            "module": "wsc"
        },
        {
            "file": "src/control.js",
            "line": 178,
            "description": "Start tab complete capabilities by compiling a list of items that match the\ncurrent user input.",
            "itemtype": "method",
            "name": "start_tab",
            "params": [
                {
                    "name": "event",
                    "description": "Event data.",
                    "type": "Object"
                }
            ],
            "class": "wsc.Control",
            "module": "wsc"
        },
        {
            "file": "src/control.js",
            "line": 233,
            "description": "Clear the tabbing cache.",
            "itemtype": "method",
            "name": "end_tab",
            "params": [
                {
                    "name": "event",
                    "description": "Event data.",
                    "type": "Object"
                }
            ],
            "class": "wsc.Control",
            "module": "wsc"
        },
        {
            "file": "src/control.js",
            "line": 248,
            "description": "Handle the send button being pressed.",
            "itemtype": "method",
            "name": "submit",
            "params": [
                {
                    "name": "event",
                    "description": "Event data.",
                    "type": "Object"
                }
            ],
            "class": "wsc.Control",
            "module": "wsc"
        },
        {
            "file": "src/control.js",
            "line": 263,
            "description": "A keypress happened. Process the keypress biatch.",
            "itemtype": "method",
            "name": "keypress",
            "params": [
                {
                    "name": "event",
                    "description": "Event data.",
                    "type": "Object"
                }
            ],
            "class": "wsc.Control",
            "module": "wsc"
        },
        {
            "file": "src/control.js",
            "line": 335,
            "description": "Handle some user input.",
            "itemtype": "method",
            "name": "handle",
            "params": [
                {
                    "name": "event",
                    "description": "Event data.",
                    "type": "Object"
                },
                {
                    "name": "data",
                    "description": "Input message given by the user.",
                    "type": "String"
                }
            ],
            "class": "wsc.Control",
            "module": "wsc"
        },
        {
            "file": "src/flow.js",
            "line": 76,
            "description": "Handle a packet event.",
            "itemtype": "method",
            "name": "handle",
            "params": [
                {
                    "name": "event",
                    "description": "Packet event data.",
                    "type": "Object"
                },
                {
                    "name": "client",
                    "description": "Client object.",
                    "type": "Object"
                }
            ],
            "class": "wsc.Flow",
            "module": "wsc"
        },
        {
            "file": "src/flow.js",
            "line": 91,
            "description": "Respond to pings from the server.",
            "itemtype": "method",
            "name": "ping",
            "params": [
                {
                    "name": "event",
                    "description": "Packet event data.",
                    "type": "Object"
                },
                {
                    "name": "client",
                    "description": "Client object.",
                    "type": "Object"
                }
            ],
            "class": "wsc.Flow",
            "module": "wsc"
        },
        {
            "file": "src/flow.js",
            "line": 102,
            "description": "Respond to a llama-style handshake.",
            "itemtype": "method",
            "name": "chatserver",
            "params": [
                {
                    "name": "event",
                    "description": "Packet event data.",
                    "type": "Object"
                },
                {
                    "name": "client",
                    "description": "Client object.",
                    "type": "Object"
                }
            ],
            "class": "wsc.Flow",
            "module": "wsc"
        },
        {
            "file": "src/flow.js",
            "line": 113,
            "description": "Process a login packet",
            "itemtype": "method",
            "name": "login",
            "params": [
                {
                    "name": "event",
                    "description": "Packet event data.",
                    "type": "Object"
                },
                {
                    "name": "client",
                    "description": "Client object.",
                    "type": "Object"
                }
            ],
            "class": "wsc.Flow",
            "module": "wsc"
        },
        {
            "file": "src/flow.js",
            "line": 155,
            "description": "Received a join packet.",
            "itemtype": "method",
            "name": "join",
            "params": [
                {
                    "name": "event",
                    "description": "Packet event data.",
                    "type": "Object"
                },
                {
                    "name": "client",
                    "description": "Client object.",
                    "type": "Object"
                }
            ],
            "class": "wsc.Flow",
            "module": "wsc"
        },
        {
            "file": "src/flow.js",
            "line": 173,
            "description": "Received a part packet.",
            "itemtype": "method",
            "name": "part",
            "params": [
                {
                    "name": "event",
                    "description": "Packet event data.",
                    "type": "Object"
                },
                {
                    "name": "client",
                    "description": "Client object.",
                    "type": "Object"
                }
            ],
            "class": "wsc.Flow",
            "module": "wsc"
        },
        {
            "file": "src/flow.js",
            "line": 215,
            "description": "Client has been kicked from a channel.",
            "itemtype": "method",
            "name": "kicked",
            "params": [
                {
                    "name": "event",
                    "description": "Packet event data.",
                    "type": "Object"
                },
                {
                    "name": "client",
                    "description": "Client object.",
                    "type": "Object"
                }
            ],
            "class": "wsc.Flow",
            "module": "wsc"
        },
        {
            "file": "src/flow.js",
            "line": 230,
            "description": "Process a property packet.",
            "itemtype": "method",
            "name": "property",
            "params": [
                {
                    "name": "event",
                    "description": "Packet event data.",
                    "type": "Object"
                },
                {
                    "name": "client",
                    "description": "Client object.",
                    "type": "Object"
                }
            ],
            "class": "wsc.Flow",
            "module": "wsc"
        },
        {
            "file": "src/flow.js",
            "line": 247,
            "description": "User join or part.",
            "itemtype": "method",
            "name": "recv_joinpart",
            "params": [
                {
                    "name": "event",
                    "description": "Packet event data.",
                    "type": "Object"
                },
                {
                    "name": "client",
                    "description": "Client object.",
                    "type": "Object"
                }
            ],
            "class": "wsc.Flow",
            "module": "wsc"
        },
        {
            "file": "src/flow.js",
            "line": 262,
            "description": "A user joined a channel.",
            "itemtype": "method",
            "name": "recv_join",
            "params": [
                {
                    "name": "event",
                    "description": "Packet event data.",
                    "type": "Object"
                },
                {
                    "name": "client",
                    "description": "Client object.",
                    "type": "Object"
                }
            ],
            "class": "wsc.Flow",
            "module": "wsc"
        },
        {
            "file": "src/flow.js",
            "line": 271,
            "description": "A user left a channel.",
            "itemtype": "method",
            "name": "recv_part",
            "params": [
                {
                    "name": "event",
                    "description": "Packet event data.",
                    "type": "Object"
                },
                {
                    "name": "client",
                    "description": "Client object.",
                    "type": "Object"
                }
            ],
            "class": "wsc.Flow",
            "module": "wsc"
        },
        {
            "file": "src/flow.js",
            "line": 280,
            "description": "A message was received in a channel.",
            "itemtype": "method",
            "name": "recv_msg",
            "params": [
                {
                    "name": "event",
                    "description": "Packet event data.",
                    "type": "Object"
                },
                {
                    "name": "client",
                    "description": "Client object.",
                    "type": "Object"
                }
            ],
            "class": "wsc.Flow",
            "module": "wsc"
        },
        {
            "file": "src/flow.js",
            "line": 291,
            "description": "A different kind of message.",
            "itemtype": "method",
            "name": "recv_action",
            "params": [
                {
                    "name": "event",
                    "description": "Packet event data.",
                    "type": "Object"
                },
                {
                    "name": "client",
                    "description": "Client object.",
                    "type": "Object"
                }
            ],
            "class": "wsc.Flow",
            "module": "wsc"
        },
        {
            "file": "src/flow.js",
            "line": 300,
            "description": "A non-parsed message.",
            "itemtype": "method",
            "name": "recv_npmsg",
            "params": [
                {
                    "name": "event",
                    "description": "Packet event data.",
                    "type": "Object"
                },
                {
                    "name": "client",
                    "description": "Client object.",
                    "type": "Object"
                }
            ],
            "class": "wsc.Flow",
            "module": "wsc"
        },
        {
            "file": "src/flow.js",
            "line": 309,
            "description": "Someone was promoted or demoted.",
            "itemtype": "method",
            "name": "recv_privchg",
            "params": [
                {
                    "name": "event",
                    "description": "Packet event data.",
                    "type": "Object"
                },
                {
                    "name": "client",
                    "description": "Client object.",
                    "type": "Object"
                }
            ],
            "class": "wsc.Flow",
            "module": "wsc"
        },
        {
            "file": "src/flow.js",
            "line": 320,
            "description": "Some sucka got kicked foo.",
            "itemtype": "method",
            "name": "recv_kicked",
            "params": [
                {
                    "name": "event",
                    "description": "Packet event data.",
                    "type": "Object"
                },
                {
                    "name": "client",
                    "description": "Client object.",
                    "type": "Object"
                }
            ],
            "class": "wsc.Flow",
            "module": "wsc"
        },
        {
            "file": "src/ignore.js",
            "line": 1,
            "description": "Ignore extension.\n\nImplements the ignore functionality.",
            "class": "wsc.MessageString",
            "module": "wsc"
        },
        {
            "file": "src/lib.js",
            "line": 176,
            "description": "Sets. Yeah. Fun.",
            "class": "wsc.MessageString",
            "module": "wsc"
        },
        {
            "file": "src/lib.js",
            "line": 185,
            "description": "Add an item.",
            "class": "wsc.MessageString",
            "module": "wsc"
        },
        {
            "file": "src/lib.js",
            "line": 207,
            "description": "Remove an item.",
            "class": "wsc.MessageString",
            "module": "wsc"
        },
        {
            "file": "src/lib.js",
            "line": 225,
            "description": "Contains an item?",
            "class": "wsc.MessageString",
            "module": "wsc"
        },
        {
            "file": "src/messages.js",
            "line": 19,
            "description": "Render the message in HTML where possible.",
            "itemtype": "method",
            "name": "html",
            "return": {
                "description": "The message rendered as an HTML string",
                "type": "String"
            },
            "class": "wsc.MessageString",
            "module": "wsc"
        },
        {
            "file": "src/messages.js",
            "line": 28,
            "description": "Render the message in plain text where possible.",
            "itemtype": "method",
            "name": "text",
            "return": {
                "description": "The message rendered as a plain text string",
                "type": "String"
            },
            "class": "wsc.MessageString",
            "module": "wsc"
        },
        {
            "file": "src/messages.js",
            "line": 37,
            "description": "Render the message with ANSI escape sequences.",
            "itemtype": "method",
            "name": "ansi",
            "return": {
                "description": "The message rendered as an ANSI-formatted string",
                "type": "String"
            },
            "class": "wsc.MessageString",
            "module": "wsc"
        },
        {
            "file": "src/messages.js",
            "line": 55,
            "description": "Parse a given message.",
            "itemtype": "method",
            "name": "parse",
            "params": [
                {
                    "name": "data",
                    "description": "Raw message data",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Message string object.",
                "type": "Object"
            },
            "class": "wsc.MessageParser",
            "module": "wsc"
        },
        {
            "file": "src/messages.js",
            "line": 67,
            "description": "Render a given message string.",
            "itemtype": "method",
            "name": "render",
            "params": [
                {
                    "name": "mode",
                    "description": "Determine how the message should be rendered",
                    "type": "Integer"
                },
                {
                    "name": "data",
                    "description": "Message string to render",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Rendered message",
                "type": "String"
            },
            "class": "wsc.MessageParser",
            "module": "wsc"
        },
        {
            "file": "src/middleware.js",
            "line": 14,
            "description": "Add a middleware callback for the given event.",
            "itemtype": "method",
            "name": "add",
            "class": "wsc.Middleware",
            "module": "wsc"
        },
        {
            "file": "src/middleware.js",
            "line": 31,
            "description": "Call a method, invoking middleware according to the given event name.",
            "itemtype": "method",
            "name": "run",
            "class": "wsc.Middleware",
            "module": "wsc"
        },
        {
            "file": "src/protocol.js",
            "line": 13,
            "description": "Mapping object.\n\nThis object determines how each protocol packet should be mapped from a `packet object`\nto an `event object`. For each packet, there is an entry, where the key is the\n{{#crossLink \"wsc.Protocol/event:method\"}}event name{{/crossLink}} of the packet.\n\nEach entry is an array. The array consists of names under which to store packet data.\nThe array is of the structure `[ param, args, body ]`. All items are optional, but\npositional. To discard a particular piece of data, `null` can be used.\n\nWhen `args` is present it must be an array. This array names the arguments to store.\nEach item in the `args` array can be a string or a pair of strings. For strings,\nthe corresponding packet argument is stored using its own name. For pairs, the packet\nargument named by the first string is stored using the second string as the key.\n\nWhen `body` is present, it can either be a string or an array. If a string is provided,\nthe entire body is stored using the string as the key. If an array is provided, it\ntreated as another mapping array. This is handled recursively.\n\nKeys in the mapping array can start with an asterisks (`*`). This indicates that the\nvalue is a formatted string and needs to be parsed using a\n{{#crossLink \"wsc.MessageParser\"}}message parser{{/crossLink}}. The asterisks is\nremoved from the key in the final object.\n\nAs an example, property packets use this mapping array:\n\n     this.maps['property'] = ['ns', ['p', 'by', 'ts'], '*value' ];\n\nWhen mapping a property packet, the returned object looks like the following:\n     \n     {\n         \"name\": \"property\",\n         \"ns\": pkt.param,\n         \"p\": pkt.arg.p,\n         \"by\": pkt.arg.by,\n         \"ts\": pkt.arg.ts,\n         \"value\": pkt.body\n     }\n\nFor an example of arguments being mapped to different keys, kick\n(error) packets use this mapping array:\n\n     this.maps['kick'] = ['ns', [['u', 'user'], 'e']];\n\nFor this array, the returned object looks like the following:\n     \n     {\n         \"name\": \"kick\",\n         \"ns\": pkt.param,\n         \"user\": pkt.arg.u,\n         \"e\": pkt.body\n     }",
            "itemtype": "property",
            "name": "maps",
            "type": "Object",
            "class": "wsc.Protocol",
            "module": "wsc"
        },
        {
            "file": "src/protocol.js",
            "line": 147,
            "description": "Extend the protocol maps.",
            "itemtype": "method",
            "name": "extend_maps",
            "params": [
                {
                    "name": "maps",
                    "description": "An object containing packet mappings.",
                    "type": "Object"
                }
            ],
            "class": "wsc.Protocol",
            "module": "wsc"
        },
        {
            "file": "src/protocol.js",
            "line": 161,
            "description": "Extend the protocol message renderers.",
            "itemtype": "method",
            "name": "extend_messages",
            "params": [
                {
                    "name": "messages",
                    "description": "An object containing packet rendering methods.",
                    "type": "Object"
                }
            ],
            "class": "wsc.Protocol",
            "module": "wsc"
        },
        {
            "file": "src/protocol.js",
            "line": 175,
            "description": "Parse a packet.",
            "itemtype": "method",
            "name": "parse",
            "params": [
                {
                    "name": "packet",
                    "description": "Packet object.",
                    "type": "Object"
                }
            ],
            "class": "wsc.Protocol",
            "module": "wsc"
        },
        {
            "file": "src/protocol.js",
            "line": 206,
            "description": "Get the event name of a packet.",
            "itemtype": "method",
            "name": "event",
            "params": [
                {
                    "name": "pkt",
                    "description": "Packet object.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Packet event name.",
                "type": "String"
            },
            "class": "wsc.Protocol",
            "module": "wsc"
        },
        {
            "file": "src/protocol.js",
            "line": 238,
            "description": "Map a packet to an event object.",
            "itemtype": "method",
            "name": "map",
            "params": [
                {
                    "name": "packet",
                    "description": "Packet object.",
                    "type": "Object"
                },
                {
                    "name": "event",
                    "description": "Event data object.",
                    "type": "Object"
                },
                {
                    "name": "mapping",
                    "description": "Packet mapping data.",
                    "type": "Object"
                }
            ],
            "class": "wsc.Protocol",
            "module": "wsc"
        },
        {
            "file": "src/protocol.js",
            "line": 304,
            "description": "Render a protocol message in the given format.",
            "itemtype": "method",
            "name": "render",
            "params": [
                {
                    "name": "format",
                    "description": "Format to render the event in.",
                    "type": "String"
                },
                {
                    "name": "event",
                    "description": "Event data.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Rendered event.",
                "type": "String"
            },
            "class": "wsc.Protocol",
            "module": "wsc"
        },
        {
            "file": "src/storage.js",
            "line": 1,
            "description": "Storage object.\nAllows you to save stuffs yo.",
            "class": "wsc.Transport",
            "module": "wsc"
        },
        {
            "file": "src/storage.js",
            "line": 12,
            "description": "Get a \"folder\".",
            "class": "wsc.Transport",
            "module": "wsc"
        },
        {
            "file": "src/storage.js",
            "line": 24,
            "description": "Get an item from storage.",
            "class": "wsc.Transport",
            "module": "wsc"
        },
        {
            "file": "src/storage.js",
            "line": 42,
            "description": "Store an item.",
            "class": "wsc.Transport",
            "module": "wsc"
        },
        {
            "file": "src/storage.js",
            "line": 56,
            "description": "Remove an item.",
            "class": "wsc.Transport",
            "module": "wsc"
        },
        {
            "file": "src/transport.js",
            "line": 26,
            "description": "Static class method.\nCreate a new client transport object.",
            "itemtype": "method",
            "name": "Create",
            "class": "wsc.Transport",
            "module": "wsc"
        },
        {
            "file": "src/transport.js",
            "line": 46,
            "description": "Register open event callback.",
            "itemtype": "method",
            "name": "open",
            "params": [
                {
                    "name": "callback",
                    "description": "This method will be called\n  when a connection is established with the server.",
                    "type": "Method",
                    "optional": true,
                    "optdefault": "wsc.Transport.sopen"
                }
            ],
            "class": "wsc.Transport",
            "module": "wsc"
        },
        {
            "file": "src/transport.js",
            "line": 59,
            "description": "Register message event callback.",
            "itemtype": "method",
            "name": "message",
            "params": [
                {
                    "name": "callback",
                    "description": "When a message is received\n  on the transport, this method will be called.",
                    "type": "Method",
                    "optional": true,
                    "optdefault": "wsc.Transport.smessage"
                }
            ],
            "class": "wsc.Transport",
            "module": "wsc"
        },
        {
            "file": "src/transport.js",
            "line": 72,
            "description": "Register disconnect event callback.",
            "itemtype": "method",
            "name": "disconnect",
            "params": [
                {
                    "name": "callback",
                    "description": "The method to be called\n  when the connection has been closed.",
                    "type": "Method",
                    "optional": true,
                    "optdefault": "wsc.Transport.sdisconnect"
                }
            ],
            "class": "wsc.Transport",
            "module": "wsc"
        },
        {
            "file": "src/transport.js",
            "line": 85,
            "description": "Open connection event stub.",
            "itemtype": "method",
            "name": "sopen",
            "class": "wsc.Transport",
            "module": "wsc"
        },
        {
            "file": "src/transport.js",
            "line": 92,
            "description": "Message event stub.",
            "itemtype": "method",
            "name": "smessage",
            "class": "wsc.Transport",
            "module": "wsc"
        },
        {
            "file": "src/transport.js",
            "line": 99,
            "description": "Close connection event stub.",
            "itemtype": "method",
            "name": "sdisconnect",
            "class": "wsc.Transport",
            "module": "wsc"
        },
        {
            "file": "src/transport.js",
            "line": 110,
            "description": "Connect to the server.",
            "itemtype": "method",
            "name": "connect",
            "class": "wsc.Transport",
            "module": "wsc"
        },
        {
            "file": "src/transport.js",
            "line": 117,
            "description": "Send a message to the server.",
            "itemtype": "method",
            "name": "send",
            "params": [
                {
                    "name": "message",
                    "description": "message to send to the server.",
                    "type": "String"
                }
            ],
            "class": "wsc.Transport",
            "module": "wsc"
        },
        {
            "file": "src/transport.js",
            "line": 125,
            "description": "Close the connection.",
            "itemtype": "method",
            "name": "close",
            "class": "wsc.Transport",
            "module": "wsc"
        },
        {
            "file": "src/transport.js",
            "line": 160,
            "description": "Called when the connection is opened.\nSets the `sock` attribute.",
            "itemtype": "method",
            "name": "onopen",
            "params": [
                {
                    "name": "event",
                    "description": "WebSocket event object.",
                    "type": "Object"
                },
                {
                    "name": "sock",
                    "description": "Transport object.",
                    "type": "Object"
                }
            ],
            "class": "wsc.WebSocket",
            "module": "wsc"
        },
        {
            "file": "src/transport.js",
            "line": 175,
            "description": "Called when the connection is closed.\nResets `sock` and `conn` to null.",
            "itemtype": "method",
            "name": "ondisconnect",
            "params": [
                {
                    "name": "event",
                    "description": "WebSocket event object.",
                    "type": "Object"
                }
            ],
            "class": "wsc.WebSocket",
            "module": "wsc"
        },
        {
            "file": "src/transport.js",
            "line": 190,
            "description": "Connect to the server.",
            "itemtype": "method",
            "name": "connect",
            "class": "wsc.WebSocket",
            "module": "wsc"
        },
        {
            "file": "src/transport.js",
            "line": 205,
            "description": "Send a message to the server.",
            "itemtype": "method",
            "name": "send",
            "params": [
                {
                    "name": "message",
                    "description": "message to send to the server.",
                    "type": "String"
                }
            ],
            "class": "wsc.WebSocket",
            "module": "wsc"
        },
        {
            "file": "src/transport.js",
            "line": 225,
            "description": "Close the connection.",
            "itemtype": "method",
            "name": "close",
            "class": "wsc.WebSocket",
            "module": "wsc"
        },
        {
            "file": "src/transport.js",
            "line": 267,
            "description": "Connect to the server.",
            "itemtype": "method",
            "name": "connect",
            "class": "wsc.SocketIO",
            "module": "wsc"
        },
        {
            "file": "src/transport.js",
            "line": 282,
            "description": "Called when the connection is opened.\nSets the `sock` attribute.",
            "itemtype": "method",
            "name": "onopen",
            "params": [
                {
                    "name": "event",
                    "description": "SocketIO event object.",
                    "type": "Object"
                },
                {
                    "name": "sock",
                    "description": "Transport object.",
                    "type": "Object"
                }
            ],
            "class": "wsc.SocketIO",
            "module": "wsc"
        },
        {
            "file": "src/transport.js",
            "line": 297,
            "description": "Called when the connection is closed.\nResets `sock` and `conn` to null.",
            "itemtype": "method",
            "name": "ondisconnect",
            "params": [
                {
                    "name": "event",
                    "description": "SocketIO event object.",
                    "type": "Object"
                }
            ],
            "class": "wsc.SocketIO",
            "module": "wsc"
        },
        {
            "file": "src/transport.js",
            "line": 312,
            "description": "Send a message to the server.",
            "itemtype": "method",
            "name": "send",
            "params": [
                {
                    "name": "message",
                    "description": "message to send to the server.",
                    "type": "String"
                }
            ],
            "class": "wsc.SocketIO",
            "module": "wsc"
        },
        {
            "file": "src/transport.js",
            "line": 332,
            "description": "Close the connection.",
            "itemtype": "method",
            "name": "close",
            "class": "wsc.SocketIO",
            "module": "wsc"
        }
    ],
    "warnings": [
        {
            "message": "replacing incorrect tag: function with method",
            "line": " src/dAmn/tablumps.js:36"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " src/dAmn/tablumps.js:47"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " src/dAmn/tablumps.js:59"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " src/commands.js:178"
        },
        {
            "message": "unknown tag: cmd",
            "line": " src/commands.js:178"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " src/commands.js:204"
        },
        {
            "message": "Missing item type\nEmote picker.\nThis should be used for retrieving input from the user.",
            "line": " src/dAmn/emotes.js:375"
        },
        {
            "message": "Missing item type\nBDS Event handlers.",
            "line": " src/dAmn/linkbds.js:120"
        },
        {
            "message": "Missing item type\ndAmn Event handlers",
            "line": " src/dAmn/linkbds.js:170"
        },
        {
            "message": "Missing item type\nFetch stash data.",
            "line": " src/dAmn/stash.js:36"
        },
        {
            "message": "Missing item type\nRender a stash thumb.",
            "line": " src/dAmn/stash.js:51"
        },
        {
            "message": "Missing item type\nStates for the parser.",
            "line": " src/dAmn/tablumps.js:74"
        },
        {
            "message": "Missing item type\nAutojoin extension.",
            "line": " src/autojoin.js:1"
        },
        {
            "message": "Missing item type\nAway extension.",
            "line": " src/away.js:1"
        },
        {
            "message": "Missing item type\nIgnore extension.\n\nImplements the ignore functionality.",
            "line": " src/ignore.js:1"
        },
        {
            "message": "Missing item type\nSets. Yeah. Fun.",
            "line": " src/lib.js:176"
        },
        {
            "message": "Missing item type\nAdd an item.",
            "line": " src/lib.js:185"
        },
        {
            "message": "Missing item type\nRemove an item.",
            "line": " src/lib.js:207"
        },
        {
            "message": "Missing item type\nContains an item?",
            "line": " src/lib.js:225"
        },
        {
            "message": "Missing item type\nStorage object.\nAllows you to save stuffs yo.",
            "line": " src/storage.js:1"
        },
        {
            "message": "Missing item type\nGet a \"folder\".",
            "line": " src/storage.js:12"
        },
        {
            "message": "Missing item type\nGet an item from storage.",
            "line": " src/storage.js:24"
        },
        {
            "message": "Missing item type\nStore an item.",
            "line": " src/storage.js:42"
        },
        {
            "message": "Missing item type\nRemove an item.",
            "line": " src/storage.js:56"
        }
    ]
}